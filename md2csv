#!/usr/bin/perl
use Data::Dumper;
use utf8;
use feature 'unicode_strings';
use Encode;
use Getopt::Long;
use Excel::Writer::XLSX;

GetOptions('debug' => \$opt_debug, 'output=s' => \$opt_output);

#print "debug $opt_debug\n";
#print "output $opt_output\n";

if (@ARGV == 0) {
    print "usage: md2csv.pl -o <output_file> <markdown>...\n";
    exit 0;
}

$csv_line_no = 0;
$csv_index = 1;
@csv = ();
$index = 0;
@csv_header = ();
%Column = ();

foreach $infile (@ARGV) {
    @csv_line = ();
    open FILE, '<:encoding(UTF-8)', $infile || die "Can't open to $infile";
    my @lines = <FILE>;
    my $context = "";
    close FILE;

    foreach my $l (@lines) {
        utf8::decode($l);
        if ($l =~ /^#+\s*(.*)\s+$/) {
            my $item = $1;

            # output previous context
            if ($index != 0) {
                $csv_line[$index - 1] = $context;
                $context = "";
            }
            # check column
            if (exists($Column{$item})) {
                $index = $Column{$item};
            } else {
                $index = $csv_index++;
                $Column{$item} = $index;
                push(@csv_header, $item);
            }
        } elsif ($l =~ /[^\s]/) {
            $l =~ s/^\s*//;
            $l =~ s/\s*$//;

            if ($context) {
                $context = "$context\n$l";
            } else {
                $context = $l;
            }
        }
    }
    if ($index != 0) {
        $csv_line[$index - 1] = $context;
        $context = "";
    }

    push @csv, \@csv_line;
}

#print Dumper @csv;
#exit 1;

print "out='$opt_output'\n";
if (!$opt_output || $opt_output =~ /\.csv$/) {
    #output csv
    if ($opt_output) {
        open OUT, '>:crlf:encoding(CP932)', $opt_output || die "Can't open to $opt_output";
    } else {
        open OUT, '>-:encoding(UTF-8)' || die "Can't open to stdout ";
    }
    my $first = 1;
    foreach my $h (@csv_header) {
        if ($first) {
            (! $opt_output) && ($h = encode_utf8($h));
            print OUT "# $h";
            $first = 0;
        } else {
            (! $opt_output) && ($h = encode_utf8($h));
            print OUT ", $h";
        }
    }
    print OUT "\n";

    foreach my $l (@csv) {
        my @line = @{$l};
        my $first = 1;
        foreach my $cell (@line) {
            # $cell = encode("shiftjis", $cell);
            $cell =~ s/\n/<BR>/;
            if ($first) {
                (! $opt_output) && ($cell = encode_utf8($cell));
                print OUT "\"$cell\"";
                $first = 0;
            } else {
                (! $opt_output) && ($cell = encode_utf8($cell));
                print OUT ", \"$cell\"";
            }
        }
        print OUT "\n";
    }
} elsif ($opt_output =~ /\.xlsx$/) {
    my $book = Excel::Writer::XLSX->new($opt_output);
    my $sheet = $book->add_worksheet("markdown");

    my $y = 0;
    my $x = 0;
    foreach my $h (@csv_header) {
        $sheet->write($y, $x, $h);
        $x++;
    }
    $y++;
    foreach my $l (@csv) {
        my @line = @{$l};
        my $x = 0;
        foreach my $cell (@line) {
            # $cell =~ s/\n/<BR>/;
            $sheet->write($y, $x, $cell);
            $x++;
        }
        $y++;
    }

    $book->close();
} else {
    print "error output file '$opt_output'\n";
    exit 1;
}
#    utf8::encode($cell);
#    printf "$context\n";

#print Dumper %Column;

exit 0;
